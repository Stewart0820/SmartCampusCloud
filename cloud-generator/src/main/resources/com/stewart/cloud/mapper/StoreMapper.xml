<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stewart.cloud.mapper.StoreMapper">
  <resultMap id="BaseResultMap" type="com.stewart.cloud.model.Store">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="store_notice" jdbcType="VARCHAR" property="storeNotice" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="cat_id" jdbcType="INTEGER" property="catId" />
    <result column="store_phone" jdbcType="VARCHAR" property="storePhone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="begin_time" jdbcType="INTEGER" property="beginTime" />
    <result column="close_time" jdbcType="INTEGER" property="closeTime" />
    <result column="is_authentication" jdbcType="INTEGER" property="isAuthentication" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, create_user_id, icon, store_notice, description, cat_id, store_phone, address, 
    create_time, begin_time, close_time, is_authentication
  </sql>
  <select id="selectByExample" parameterType="com.stewart.cloud.model.StoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stewart.cloud.model.StoreExample">
    delete from store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stewart.cloud.model.Store">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store (name, create_user_id, icon, 
      store_notice, description, cat_id, 
      store_phone, address, create_time, 
      begin_time, close_time, is_authentication
      )
    values (#{name,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, 
      #{storeNotice,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{catId,jdbcType=INTEGER}, 
      #{storePhone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, 
      #{beginTime,jdbcType=INTEGER}, #{closeTime,jdbcType=INTEGER}, #{isAuthentication,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stewart.cloud.model.Store">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="storeNotice != null">
        store_notice,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="catId != null">
        cat_id,
      </if>
      <if test="storePhone != null">
        store_phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="isAuthentication != null">
        is_authentication,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="storeNotice != null">
        #{storeNotice,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="catId != null">
        #{catId,jdbcType=INTEGER},
      </if>
      <if test="storePhone != null">
        #{storePhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=INTEGER},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=INTEGER},
      </if>
      <if test="isAuthentication != null">
        #{isAuthentication,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stewart.cloud.model.StoreExample" resultType="java.lang.Long">
    select count(*) from store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update store
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.storeNotice != null">
        store_notice = #{record.storeNotice,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.catId != null">
        cat_id = #{record.catId,jdbcType=INTEGER},
      </if>
      <if test="record.storePhone != null">
        store_phone = #{record.storePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=INTEGER},
      </if>
      <if test="record.closeTime != null">
        close_time = #{record.closeTime,jdbcType=INTEGER},
      </if>
      <if test="record.isAuthentication != null">
        is_authentication = #{record.isAuthentication,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update store
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR},
      store_notice = #{record.storeNotice,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      cat_id = #{record.catId,jdbcType=INTEGER},
      store_phone = #{record.storePhone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      begin_time = #{record.beginTime,jdbcType=INTEGER},
      close_time = #{record.closeTime,jdbcType=INTEGER},
      is_authentication = #{record.isAuthentication,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stewart.cloud.model.Store">
    update store
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="storeNotice != null">
        store_notice = #{storeNotice,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="catId != null">
        cat_id = #{catId,jdbcType=INTEGER},
      </if>
      <if test="storePhone != null">
        store_phone = #{storePhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=INTEGER},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=INTEGER},
      </if>
      <if test="isAuthentication != null">
        is_authentication = #{isAuthentication,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stewart.cloud.model.Store">
    update store
    set name = #{name,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      store_notice = #{storeNotice,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      cat_id = #{catId,jdbcType=INTEGER},
      store_phone = #{storePhone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=INTEGER},
      close_time = #{closeTime,jdbcType=INTEGER},
      is_authentication = #{isAuthentication,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>